#!/bin/bash

# First, make sure that cgroups are mounted correctly.
CGROUP=/sys/fs/cgroup

[ -d $CGROUP ] || 
	mkdir $CGROUP

mountpoint -q $CGROUP || 
	mount -n -t tmpfs -o uid=0,gid=0,mode=0755 cgroup $CGROUP || {
		echo "Could not make a tmpfs mount. Did you use -privileged?"
		exit 1
	}

while read SUBSYS HIERARCHY NUM_CGROUPS ENABLED
do
	[ "$ENABLED" = 0 ] && continue
	[ "$ENABLED" = enabled ] && continue
	# Those guys are special. Let's skip them for now.
	[ "$SUBSYS" = cpu ] && continue
	[ "$SUBSYS" = cpuacct ] && continue
	[ -d $CGROUP/$SUBSYS ] || mkdir $CGROUP/$SUBSYS
	mountpoint -q $CGROUP/$SUBSYS || 
		mount -n -t cgroup -o $SUBSYS cgroup $CGROUP/$SUBSYS
done </proc/cgroups

# Now, close extraneous file descriptors.
pushd /proc/self/fd
for FD in *
do
	case "$FD" in
	# Keep stdin/stdout/stderr
	[012])
		;;
	# Nuke everything else
	*)
		eval exec "$FD>&-"
		;;
	esac
done
popd

# If we were given a PORT environment variable, start as a simple daemon;
# otherwise, spawn a shell as well
if [ "$PORT" ]
then
	exec docker -d -H 0.0.0.0:$PORT
else

	docker -d &
	exec bash
fi
